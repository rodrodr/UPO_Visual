---
title: "<b>Interactividad</b><br>en los gráficos"
bibliography: references.bib
---

```{r setup, include=FALSE}

# Carga las librerías
library(reactable)
library(poliscidata)
library(vdemdata)

dem<- vdem

dm <- dem[,c("country_name","year","v2x_polyarchy","v2x_libdem","v2x_partipdem","v2x_delibdem","v2x_egaldem")]

names(dm) <- c("Country","Year","Electoral","Liberal","Participative","Deliberative","Egalitarian")

d <- poliscidata::states

w <- poliscidata::world

Year <- c(1985:2019)

Gini <- c(55.6,58.5,59.7,61.4,63.3,60.5,60.3,60.2,60.1,59.9,59.6,59.9,59.8,59.6,59.0,58.7,58.4,58.1,57.6,56.5,56.3,55.6,54.9,54.0,53.7,53.3,52.9,53.4,52.7,52.0,51.9,53.3,53.3,53.9,53.5)

Administration <- c("Sarney","Sarney","Sarney","Sarney","Sarney","Collor","Collor","Collor","Itamar","Itamar","FHC","FHC","FHC","FHC","FHC","FHC","FHC","FHC","Lula","Lula","Lula","Lula","Lula","Lula","Lula","Lula","Dilma","Dilma","Dilma","Dilma","Dilma","Dilma","Temer","Temer","Bolsonaro")

Growth <- c(7.9,7.5,3.5,-0.1,3.2,-4.4,1.0,-0.5,4.9,5.9,4.2,2.2,3.4,0.3,0.5,4.4,1.4,3.1,1.1,5.8,3.2,4.0,6.1,5.1,-0.1,7.5,4.0,1.9,3.0,0.5,-3.5,-3.3,1.3,1.8,1.2)

GDP <- c(836,898,930,930,959,917,927,922,967,1024,1067,1090,1127,1131,1137,1186,1203,1240,1254,1326,1368,1423,1509,1586,1584,1703,1771,1805,1859,1868,1802,1743,1766,1798,1820)

br <- data.frame(Year=Year, 
                 GDP=GDP, 
                 Growth=Growth, 
                 Gini=Gini, 
                 Administration=Administration)


brs <- data.frame()

for(i in 1:nrow(br)){
  
  if (i<nrow(br)){
    k <- i+1
  }else{
    k <- i
  }
  
  brs <- rbind(brs,
               data.frame(
                      x1=br$Year[i],
                    xend=br$Year[k],
                      y1=br$Gini[i],
                      yend=br$Gini[k],
 Administration=br$Administration[i])
              )
  
}

brs2 <- data.frame()

for(i in 1:nrow(br)){
  
  if (i<nrow(br)){
    k <- i+1
  }else{
    k <- i
  }
  
  brs2 <- rbind(brs2,
               data.frame(
                      x1=br$GDP[i],
                    xend=br$GDP[k],
                      y1=br$Gini[i],
                      yend=br$Gini[k],
 Administration=br$Administration[i],
                      Year=Year[i])
              )
  
}

di <- read.delim("https://www.dropbox.com/s/r8309gzg3rymajr/Visitas_Dilma_redux.csv?dl=1", sep=";", dec=",")

di <- unique(di[,c("NOM_O","NOM_D","FREQ","VISITS")])

names(di) <- c("Origin","Destination","Travels","Visits")


ma <- read.delim("https://www.dropbox.com/s/85jyuirin4eirln/Visitas_Marina_redux.csv?dl=1", sep=";", dec=",")

ma <- unique(ma[,c("NOM_O","NOM_D","FREQ","VISITS")])


names(ma) <- c("Origin","Destination","Travels","Visits")

library(netrankr)
library(igraph)
med <- florentine_m
med <- as_edgelist(med)


co <- c("Argentina","Bolivia","Brazil","Chile","Colombia","Costa Rica","Dominican Republic","Ecuador","Honduras","Mexico","Panama","Peru","Paraguay","El Salvador","Uruguay")

dml <- dm[dm$Country%in%c(co,"Nicaragua","Venezuela"),]

ye <- c(rep(2000,length(co)),rep(2010,length(co)),
        rep(2020,length(co)))

top <- c(37.7,47.8,47,42.6,47,35.7,40.2,45.9,41.9,42,43.2,36.8,42.1,39,35.4,31.7,36.9,42.2,38.2,43.4,36.8,36.5,37.5,40.2,37.1,39.7,34.2,40.5,33.2,33.6,30.3,32.6,39.4,35.8,42.2,37,30.5,36,34.6,35.5,38,32.9,33.3,29.8,29.9)

lat <- data.frame(Country=c(co,co,co), Year=as.character(ye), Share=top)



co <- c("Austria","Belgium","Bulgaria","Croatia","Czechia","Denmark","Estonia","Finland","France","Germany","Greece","Hungary","Ireland","Italy","Latvia","Lithuania","Luxembourg","Malta","Netherlands","Poland","Portugal","Romania","Slovakia","Slovenia","Spain","Sweden")

ye <- c(rep(2000,length(co)),rep(2010,length(co)),
        rep(2020,length(co)))


top <- c(22.7,28.3,26.6,24.3,22.5,20.1,28.4,22.7,24.4,23,25.7,24.2,26.1,26.4,28.5,27.9,23.9,22.1,21.8,28.2,30.2,29,22.1,20.6,26.3,22.1,23.6,22.7,26.9,23.9,22.4,22.5,24.3,22.5,27.1,24.1,25.6,23.1,24.9,26.2,26.2,24.8,23.7,22.7,22.4,25.8,28.3,25,21.9,20.7,26,21.8,23.2,22.3,31.4,22.2,21.5,23.5,23.3,23,26.7,25.1,24.9,23.3,25.1,25.9,26.6,27.5,25.8,24.8,23.9,24,26,24.5,18.8,20.7,24.9,22.7)

eu <- data.frame(Country=c(co,co,co), Year=as.character(ye), Share=top)

dme <- dm[dm$Country%in%c(co,"Czech Republic"),]



```

## Introducción


## Tipos de interacción

### Tooltips

Creación de un tooltip - html dentro de R


### Cliques




### Hover



### Zoom



## ggiraph

asas


```{r}

library(poliscidata)

w <- world

# Crea un tooltip con algunos datos
# del país
w$tooltip_text <- paste0("<strong>", w$country, "</strong><br>",
                         "<strong>Esperanza de vida:</strong> ",
                         w$lifeex_total,
                         "<br><strong>Democracia:</strong> ",
                         w$dem_score14)


library(ggthemes)
library(ggplot2)
library(ggiraph)

# Capa de datos
p <- ggplot(w)

# Añade la capa de estética
p <- p +
   aes(x = lifeex_total, 
       y = dem_score14,
       data_id=regionun)

# Añade la capa geométrica interactiva
p <- p + geom_point_interactive(
              aes(tooltip = tooltip_text)
              )

# Visualiza el gráfico interactivo
x <- girafe(ggobj = p, 
            options = 
              list(
                opts_hover_inv(css = "opacity:0.1;")
              )
            )

x


```







```{r}


library(ggthemes)
library(ggplot2)
library(ggiraph)


nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)


gg <- ggplot(nc) +
  geom_sf_interactive(aes(fill = AREA, 
                          tooltip = NAME, 
                          data_id = NAME,
                          onclick =  sprintf("window.open(\"http://en.wikipedia.org/wiki/%s_County,_North_Carolina\")", NAME)))+
  theme_map()+
  theme(legend.position = "none")+
  scale_fill_continuous_tableau(palette="Purple")
  
  
x <- girafe(ggobj = gg, 
            options = 
              list(
                opts_hover(css = ''), 
                opts_hover_inv(css = "opacity:0.1;")
    )
  )

x


```




## plotly



```{r}

library(plotly)
library(ggplot2)

# Capa de datos
p <- ggplot(w)

# Añade la capa de estética
p <- p +
   aes(x = lifeex_total, 
       y = dem_score14,
       fill=regionun)

# Añade la capa geométrica
p <- p + geom_point(color="transparent")

ggplotly(p)

```




## Visnetwork



## tenet


### plotGrid

```{r, fig.height=9, fig.width=8}

# Carga los paquetes
library(tenet)
library(quanteda)

# Crea un corpus con los 
# discursos de investidura
# de los presidentes españoles
cp <- corpus(spa.inaugural)

# Cuenta las palabras clave
# del diccionario dic.pol.es 
# que he preparado como ejemplo
xz <- countKeywords(cp, 
                    dic.pol.es, 
                    rel.freq = T, 
                    group.var = "President",
                    quietly = TRUE)

# Agrega las frecuencias por grupo
# del diccionario
xx <- aggregate(list(frequency=xz$frequency), 
                by=list(groups=xz$groups,
                        level1=xz$level1,
                        level2=xz$level2), 
                sum, na.rm=T)

# Elimina los valores no
# encontrados
xx <- xx[xx$frequency>0,]

# Ordena los valores por 
# level1 y level2
xx <- xx[order(xx$level1, 
               xx$level2),]

xx$level2 <- factor(xx$level2, 
                    levels=unique(xx$level2))


# Crea el gráfico (estandarizado)
plotGrid(xx, 
         x="groups", 
         y="level2", 
         size="frequency",
         palette=pal$cat.brewer.Paired.12,
         color="level1", 
         standardize = TRUE,
         interactive=TRUE,
         height_svg = 9,
         width_svg = 8,
         leg.size = "Media (%)",
         leg.color = "Categoría"
         )

```



## Otros paquetes


NetworkD3

leaflet

tmap

